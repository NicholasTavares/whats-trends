[{"/home/nicholas/Desktop/whats-trends/frontend/src/index.js":"1","/home/nicholas/Desktop/whats-trends/frontend/src/App.js":"2","/home/nicholas/Desktop/whats-trends/frontend/src/redux/generalReducers.js":"3","/home/nicholas/Desktop/whats-trends/frontend/src/redux/reducers/trendsReducer.js":"4","/home/nicholas/Desktop/whats-trends/frontend/src/redux/actions/trendsActions.js":"5","/home/nicholas/Desktop/whats-trends/frontend/src/components/today/Today.jsx":"6","/home/nicholas/Desktop/whats-trends/frontend/src/components/trends/Trends.jsx":"7","/home/nicholas/Desktop/whats-trends/frontend/src/components/topTrendsBrasil/Carousel.jsx":"8","/home/nicholas/Desktop/whats-trends/frontend/src/components/topTrendsBrasil/TopTrendsBrasil.jsx":"9","/home/nicholas/Desktop/whats-trends/frontend/src/components/topics/Business.jsx":"10","/home/nicholas/Desktop/whats-trends/frontend/src/components/topics/Entertainment.jsx":"11","/home/nicholas/Desktop/whats-trends/frontend/src/components/topics/Sports.jsx":"12","/home/nicholas/Desktop/whats-trends/frontend/src/components/region/Region.jsx":"13"},{"size":652,"mtime":1619742632748,"results":"14","hashOfConfig":"15"},{"size":191,"mtime":1619829160581,"results":"16","hashOfConfig":"15"},{"size":222,"mtime":1620420117653,"results":"17","hashOfConfig":"15"},{"size":566,"mtime":1621372653462,"results":"18","hashOfConfig":"15"},{"size":1227,"mtime":1621372652766,"results":"19","hashOfConfig":"15"},{"size":1546,"mtime":1621372774731,"results":"20","hashOfConfig":"15"},{"size":180,"mtime":1619829147161,"results":"21","hashOfConfig":"15"},{"size":1575,"mtime":1621099127505,"results":"22","hashOfConfig":"15"},{"size":1305,"mtime":1620423729643,"results":"23","hashOfConfig":"15"},{"size":3675,"mtime":1620789121621,"results":"24","hashOfConfig":"15"},{"size":2094,"mtime":1620430651349,"results":"25","hashOfConfig":"15"},{"size":2022,"mtime":1620786995973,"results":"26","hashOfConfig":"15"},{"size":4757,"mtime":1621171272108,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1torq2x",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},"/home/nicholas/Desktop/whats-trends/frontend/src/index.js",[],["59","60"],"/home/nicholas/Desktop/whats-trends/frontend/src/App.js",[],"/home/nicholas/Desktop/whats-trends/frontend/src/redux/generalReducers.js",[],"/home/nicholas/Desktop/whats-trends/frontend/src/redux/reducers/trendsReducer.js",["61"],"/home/nicholas/Desktop/whats-trends/frontend/src/redux/actions/trendsActions.js",[],"/home/nicholas/Desktop/whats-trends/frontend/src/components/today/Today.jsx",["62"],"/home/nicholas/Desktop/whats-trends/frontend/src/components/trends/Trends.jsx",[],"/home/nicholas/Desktop/whats-trends/frontend/src/components/topTrendsBrasil/Carousel.jsx",[],"/home/nicholas/Desktop/whats-trends/frontend/src/components/topTrendsBrasil/TopTrendsBrasil.jsx",[],"/home/nicholas/Desktop/whats-trends/frontend/src/components/topics/Business.jsx",["63","64"],"import React, { useEffect, useState } from 'react'\nimport { GiExpand } from 'react-icons/gi'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { FiChevronDown } from 'react-icons/fi'\n\n\n// ACTIONS\nimport { getRealTimeTrendsBusiness } from '../../redux/actions/trendsActions'\n\nconst Business = ({ business, getRealTimeTrendsBusiness }) => {\n\n    useEffect(() => getRealTimeTrendsBusiness('b'), [])\n\n    const [slide, setSlide] = useState(false)\n    const [option, setOptions] = useState(['Negócios', 'Ciência e Tecnologia', 'Saúde'])\n\n    const changeOptions = (textOption) => {\n        option.filter((el, i) => {\n            if (el === textOption) {\n                option[i] = option[0]\n                option[0] = el\n                setOptions(option)\n            }\n        })\n\n        if (option[0] === 'Negócios') {\n            getRealTimeTrendsBusiness('b')\n        }\n        if (option[0] === 'Ciência e Tecnologia') {\n            getRealTimeTrendsBusiness('t')\n        }\n        if (option[0] === 'Saúde') {\n            getRealTimeTrendsBusiness('m')\n        }\n    }\n\n    return (\n\n        <section className='topic-container'>\n            <div className='topic-container__title-b'>\n                <span>{option[0]}</span>\n                <div className='topic-container__title-b__arrow' onClick={() => setSlide(!slide)}>\n                    <FiChevronDown />\n\n                    {slide ?\n                        <div className='topic-container__title-b__options'>\n                            <div className=\"topic-container__title-b__options__option\"\n                                onClick={(e) => changeOptions(e.target.innerText)}>\n                                <span>{option[1]}</span>\n                            </div>\n                            <div className=\"topic-container__title-b__options__option\"\n                                onClick={(e) => changeOptions(e.target.innerText)}>\n                                <span>{option[2]}</span>\n                            </div>\n                        </div> :\n                        ''}\n                </div>\n            </div>\n            {business ? business.map((topic, i) =>\n                <div className='topic-container__topics' key={i}>\n                    <a className='topic-container__topics__title' target=\"_blank\"\n                        rel=\"noopener noreferrer\" href={topic.articles[0].url}>\n                        {topic.articles[0].articleTitle.replace(/&quot;/g, '\"').replace(/&#39;/g, \"'\")}\n                    </a>\n                    <p className='topic-container__topics__paragraph'>\n                        {topic.articles[0].snippet.replace(/&quot;/g, '\"').replace(/&#39;/g, \"'\")}\n                    </p>\n                    <div className='topic-container__topics__related'>\n                        <span className='topic-container__topics__related__source'>\n                            {topic.articles[0].time} por <strong>{topic.articles[0].source}</strong>\n                        </span>\n                        <span className='topic-container__topics__related__icon'>\n                            <GiExpand />\n                        </span>\n                    </div>\n                </div>) : 'Loading...'}\n        </section>\n\n    )\n}\n\n\nconst mapStatetoProps = state => ({\n    business: state.trend.business\n\n})\n// vai disparar uma chamada para todos os reducers da aplicação se uma função for chamada\nconst mapDispatchToProps = dispatch => bindActionCreators({ getRealTimeTrendsBusiness }, dispatch)\n// estou passando para as propriedades de Today\nexport default connect(mapStatetoProps, mapDispatchToProps)(Business)\n","/home/nicholas/Desktop/whats-trends/frontend/src/components/topics/Entertainment.jsx",["65"],"import React, { useEffect } from 'react'\nimport { GiExpand } from 'react-icons/gi'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\n\n// ACTIONS\nimport { getRealTimeTrendsEntertainment } from '../../redux/actions/trendsActions'\n\nconst Entertainment = ({ entertainment, getRealTimeTrendsEntertainment }) => {\n\n    useEffect(() => getRealTimeTrendsEntertainment('e'), [])\n\n    return (\n\n        <section className='topic-container'>\n            <h1 className='topic-container__title-e'>Entretenimento</h1>\n            {entertainment ? entertainment.map((topic, i) =>\n                <div className='topic-container__topics' key={i}>\n                    <a className='topic-container__topics__title' target=\"_blank\"\n                        rel=\"noopener noreferrer\" href={topic.articles[0].url}>\n                        {topic.articles[0].articleTitle.replace(/&quot;/g, '\"').replace(/&#39;/g, \"'\")}\n                    </a>\n                    <p className='topic-container__topics__paragraph'>\n                        {topic.articles[0].snippet.replace(/&quot;/g, '\"').replace(/&#39;/g, \"'\")}\n                    </p>\n                    <div className='topic-container__topics__related'>\n                        <span className='topic-container__topics__related__source'>\n                            {topic.articles[0].time} por <strong>{topic.articles[0].source}</strong>\n                        </span>\n                        <span className='topic-container__topics__related__icon'>\n                            <GiExpand />\n                        </span>\n                    </div>\n                </div>) : 'Loading...'}\n        </section>\n\n    )\n}\n\n\nconst mapStatetoProps = state => ({\n    entertainment: state.trend.entertainment\n})\n// vai disparar uma chamada para todos os reducers da aplicação se uma função for chamada\nconst mapDispatchToProps = dispatch => bindActionCreators({ getRealTimeTrendsEntertainment }, dispatch)\n// estou passando para as propriedades de Today\nexport default connect(mapStatetoProps, mapDispatchToProps)(Entertainment)\n","/home/nicholas/Desktop/whats-trends/frontend/src/components/topics/Sports.jsx",["66","67"],"import React, { useEffect, useState } from 'react'\nimport { GiExpand } from 'react-icons/gi'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\n\n\n// ACTIONS\nimport { getRealTimeTrendsSports } from '../../redux/actions/trendsActions'\n\nconst Sports = ({ sports, getRealTimeTrendsSports }) => {\n\n    useEffect(() => getRealTimeTrendsSports('s'), [])\n\n    return (\n        <section className='topic-container'>\n            <h1 className='topic-container__title-s'>Esporte</h1>\n            {sports ? sports.map((topic, i) =>\n                <div className='topic-container__topics' key={i}>\n                    <a className='topic-container__topics__title' target=\"_blank\"\n                        rel=\"noopener noreferrer\" href={topic.articles[0].url}>\n                        {topic.articles[0].articleTitle.replace(/&quot;/g, '\"').replace(/&#39;/g, \"'\")}\n                    </a>\n                    <p className='topic-container__topics__paragraph'>\n                        {topic.articles[0].snippet.replace(/&quot;/g, '\"').replace(/&#39;/g, \"'\")}\n                    </p>\n                    <div className='topic-container__topics__related'>\n                        <span className='topic-container__topics__related__source'>\n                            {topic.articles[0].time} por <strong>{topic.articles[0].source}</strong>\n                        </span>\n                        <span className='topic-container__topics__related__icon'>\n                            <GiExpand />\n                        </span>\n                    </div>\n                </div>) : 'Loading...'}\n\n        </section>\n\n    )\n}\n\n\nconst mapStatetoProps = state => ({\n    sports: state.trend.sports\n\n})\n// vai disparar uma chamada para todos os reducers da aplicação se uma função for chamada\nconst mapDispatchToProps = dispatch => bindActionCreators({ getRealTimeTrendsSports }, dispatch)\n// estou passando para as propriedades de Today\nexport default connect(mapStatetoProps, mapDispatchToProps)(Sports)\n","/home/nicholas/Desktop/whats-trends/frontend/src/components/region/Region.jsx",["68"],"import React, { useEffect, useState, useRef } from 'react'\nimport DatePicker from 'react-date-picker'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { FaCalendarAlt } from 'react-icons/fa'\nimport { ImSearch } from 'react-icons/im'\n\n// ACTIONS\nimport { getInterestByRegion } from '../../redux/actions/trendsActions'\n\nconst Region = ({ region, getInterestByRegion }) => {\n    const inputText = useRef(null)\n    useEffect(() => getInterestByRegion('BR'), [])\n    const [value, onChange] = useState(new Date());\n    const [message, setMessage] = useState(null)\n\n    const SearchTerm = () => {\n        if (!inputText.current.value) {\n            return setMessage('Digite um termo para pesquisar')\n        }\n        if (!Array.isArray(value)) {\n            return setMessage('Digite um intervalo de data')\n        }\n        setMessage(null)\n        getInterestByRegion('BR', inputText.current.value, value)\n    }\n\n    return (\n        <section className='trend2'>\n            <div className='region_container'>\n                <div className='region_container__search'>\n                    <div className=\"region_container__search-text\">\n                        <input ref={inputText} type=\"text\" placeholder='Acarajé' />\n                        <span style={{ display: 'inline-block', padding: '0.2rem', color: 'red', fontWeight: '600', marginBottom: '1rem' }}>\n                            {message ? message : ''}\n\n                        </span>\n                    </div>\n                    <DatePicker\n                        className={'calendario'}\n                        required={true}\n                        selectRange={true}\n                        showNavigation={true}\n                        locale={\"PT-BR\"}\n                        calendarIcon={<FaCalendarAlt />}\n                        format={'d/M/y'}\n                        minDate={new Date('01/01/2004')}\n                        maxDate={new Date()}\n                        returnValue={'range'}\n                        onChange={onChange}\n                        value={value}\n                        defaultValue={[new Date('01/01/2004'), new Date()]}\n                    />\n                    <div className=\"region_container__search-button\" onClick={() => SearchTerm()}>\n                        <span style={{ display: 'inline-block' }}>\n                            <ImSearch />\n                        </span>\n                    </div>\n                </div>\n                {region && !message ?\n                    <div className=\"region_container__search-text__message\">\n                        <span>\n                            Estados mais interessados em <strong style={{ color: 'blueviolet', textDecoration: 'underline' }}>\n                                {region[0].keyword}\n                            </strong> de <strong>{region[0].startTime}</strong> até <strong>\n                                {region[0].endTime}</strong>:\n                        </span>\n                    </div> : ''}\n\n\n                <div className='region_container__search-result__row' style={{ border: 'none' }}>\n                    <div className=\"region_container__search-result__col-rank\">Rank</div>\n                    <div className=\"region_container__search-result__col-title\">Estado</div>\n                    <div className=\"region_container__search-result__col-title\">Popularidade</div>\n                </div>\n                <div className='region_container__search-result__container-result'>\n                    {region ? region.map((res, i) => (\n                        <div className='region_container__search-result__row' key={i}>\n                            <div className=\"region_container__search-result__col-rank-data\">\n                                <span style={{ color: '#F09100' }}><strong>{i + 1}</strong></span>\n                            </div>\n                            <div className=\"region_container__search-result__col-data\">\n                                <span>{res.name}</span>\n                            </div>\n                            <div className=\"region_container__search-result__col-data\">\n                                <span>{res.value}</span>\n                            </div>\n                        </div>\n                    )) : 'Loading...'}\n                </div>\n\n            </div>\n        </section>\n    )\n}\n\nconst mapStatetoProps = state => ({\n    region: state.trend.region\n\n})\n// vai disparar uma chamada para todos os reducers da aplicação se uma função for chamada\nconst mapDispatchToProps = dispatch => bindActionCreators({ getInterestByRegion }, dispatch)\n// estou passando para as propriedades de Today\nexport default connect(mapStatetoProps, mapDispatchToProps)(Region)",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":1,"nodeType":"75","endLine":18,"endColumn":2},{"ruleId":"76","severity":1,"message":"77","line":16,"column":39,"nodeType":"78","endLine":16,"endColumn":41,"suggestions":"79"},{"ruleId":"76","severity":1,"message":"80","line":13,"column":53,"nodeType":"78","endLine":13,"endColumn":55,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":19,"column":31,"nodeType":"84","messageId":"85","endLine":19,"endColumn":33},{"ruleId":"76","severity":1,"message":"86","line":12,"column":58,"nodeType":"78","endLine":12,"endColumn":60,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":1,"column":28,"nodeType":"90","messageId":"91","endLine":1,"endColumn":36},{"ruleId":"76","severity":1,"message":"92","line":13,"column":51,"nodeType":"78","endLine":13,"endColumn":53,"suggestions":"93"},{"ruleId":"76","severity":1,"message":"94","line":13,"column":48,"nodeType":"78","endLine":13,"endColumn":50,"suggestions":"95"},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getDailyTrends'. Either include it or remove the dependency array. If 'getDailyTrends' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["98"],"React Hook useEffect has a missing dependency: 'getRealTimeTrendsBusiness'. Either include it or remove the dependency array. If 'getRealTimeTrendsBusiness' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["99"],"array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'getRealTimeTrendsEntertainment'. Either include it or remove the dependency array. If 'getRealTimeTrendsEntertainment' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["100"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'getRealTimeTrendsSports'. Either include it or remove the dependency array. If 'getRealTimeTrendsSports' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["101"],"React Hook useEffect has a missing dependency: 'getInterestByRegion'. Either include it or remove the dependency array. If 'getInterestByRegion' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["102"],"no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},"Update the dependencies array to be: [getDailyTrends]",{"range":"113","text":"114"},"Update the dependencies array to be: [getRealTimeTrendsBusiness]",{"range":"115","text":"116"},"Update the dependencies array to be: [getRealTimeTrendsEntertainment]",{"range":"117","text":"118"},"Update the dependencies array to be: [getRealTimeTrendsSports]",{"range":"119","text":"120"},"Update the dependencies array to be: [getInterestByRegion]",{"range":"121","text":"122"},[479,481],"[getDailyTrends]",[430,432],"[getRealTimeTrendsBusiness]",[398,400],"[getRealTimeTrendsEntertainment]",[374,376],"[getRealTimeTrendsSports]",[493,495],"[getInterestByRegion]"]